【AWS】3．ストレージ



/****************** 3-1 バックアップ戦略 ********************/
AWS バックアップ戦略 周辺の主要用語と解説
⚫️バックアップ戦略（Backup Strategy）
：AWS上でのシステム障害・データ損失に備えて、データを定期的に保存・管理するための設計方針。RTO/RPOに基づいて、適切な手段と頻度を決定する。

⚫️RTO（Recovery Time Objective）
：障害が発生してから業務を再開するまでの目標時間。例：システムは2時間以内に復旧。

⚫️RPO（Recovery Point Objective）
：障害時にどの時点までデータを戻せれば許容できるか。例：直近15分以内のデータまで戻せれば良い。

⚫️AWS Backup
：EC2（EBS）、RDS、DynamoDB、EFS、Storage Gatewayなどを対象に、一元的なバックアップポリシーを設定・管理できるマネージドサービス。定期バックアップと復元が可能。

⚫️バックアッププラン（Backup Plan）
：AWS Backupで定義するバックアップルールのセット。対象リソース、スケジュール、保存期間などを指定。

⚫️バックアップボルト（Backup Vault）
：バックアップされたデータを保管・管理する論理的な保管庫。Vaultごとにアクセス制御も可能。

⚫️スナップショット（Snapshot）
：EBSやRDSなどのリソース状態をある時点で保存したもの。インクリメンタル方式でコスト効率が高い。

⚫️EBSスナップショット
：EBSボリュームの内容を保存。復元して新しいボリュームを作成可能。S3に保存される（透過的）。

⚫️RDSスナップショット
：RDSインスタンスの手動／自動バックアップ。スナップショットから別リージョンに複製や復元も可能。

⚫️DynamoDBバックアップ
：オンデマンドで取得可能なフルバックアップ。秒単位で復元できる「ポイントインタイムリカバリ（PITR）」にも対応。

⚫️ポイントインタイムリカバリ（PITR）
：特定の時刻（秒単位）を指定してデータベースを復元できる機能。DynamoDBやAuroraなどが対応。

⚫️クロスリージョンバックアップ（Cross-Region Backup）
：別のリージョンにスナップショットやバックアップを自動複製する設定。災害対策（DR）用途に使われる。

⚫️ライフサイクル管理
：バックアップの**保存期間を自動管理（例：30日で削除）**する仕組み。AWS Backup内で設定可能。

⚫️Storage Gateway（Tape Gateway）
：オンプレミスのバックアップをAWSクラウド上に仮想テープとして保存できるサービス。既存バックアップソフトと連携可能。

⚫️AWS Data Lifecycle Manager（DLM）
：EBSスナップショットを定期的に自動取得・削除できるスケジューラ。シンプルなバックアップ用途向け。

⚫️アーカイブストレージ（S3 Glacier / Glacier Deep Archive）
：長期保存用で低コストのストレージ。即時復元には不向きだが、法令順守や監査記録の保存に最適。


----------------------------------------------------------------------------
✅ 設計・試験でのポイント
RTO/RPOに応じてツールと頻度を設計する
　例：数秒以内の復元が必要なら→スナップショット＋PITR

AWS Backup = 複数リソースのバックアップ統合管理

バックアップとアーカイブの違いを理解（即時復元 vs 長期保管）

クロスリージョン複製の活用でDR対応を強化

定期的なリストア（復元）テストも設計に含めるべき

🧠 よく出るひっかけ注意点
誤解しやすい点	正しい知識
AWS Backup はすべてのサービスをサポート	❌ サポート対象は限定されている（EC2/EBS, RDS, EFS, DynamoDB など）
スナップショットは自動で削除される	❌ ライフサイクルルールがなければ手動で削除が必要
S3はAWS Backup対象	❌ S3はAWS Backupの対象外。バージョニングやレプリケーションで保護

🌍 ユースケース例
金融業界：監査要件に対応した7年間保存＋自動削除

医療業界：患者データをPITR付きで保管しつつ、1日1回スナップショット

教育機関：週1回のバックアップ＋1ヶ月保管＋Glacier移行

----------------------------------------------------------------------------

┌─────────────┐
│ AWS Backup            │ ← バックアップの統合管理
└──────┬──────┬──────┘
       │            │            │
   [EBS]      [RDS]      [DynamoDB]   ... ← 対象リソース
       ▼            ▼            ▼
   Snapshot   Snapshot   PITR Backup
       │
       ▼
┌─────────────┐
│ Backup Vault         │ ← 保存場所（暗号化＆アクセス制御）
└─────────────┘
       │
       ▼
（必要に応じて復元 / クロスリージョン複製）



/****************** 3-2 Amazon Elastic Block Store(Amazon EBS) ********************/
Amazon EBS 周辺の主要用語と解説
⚫️Amazon EBS（Elastic Block Store）
：EC2インスタンスに接続して使う永続的なブロックストレージ。ハードディスクのようにマウントしてOSやデータ保存に利用できる。

⚫️EBSボリューム（Volume）
：EBSストレージの1単位。EC2インスタンスに1つ以上アタッチして使用。インスタンスと同じAZ内に存在する必要がある。

⚫️アタッチ / デタッチ
：EBSボリュームを**EC2インスタンスに接続（アタッチ）または切り離し（デタッチ）**する操作。再起動なしで動的に可能。

⚫️EBSスナップショット（Snapshot）
：ボリュームのある時点のバックアップをS3に保存する仕組み。インクリメンタル保存で、コスト効率が高い。復元して新しいボリュームを作成可能。

⚫️ボリュームタイプ
：EBSには複数のタイプがあり、パフォーマンスとコスト要件に応じて選択する。

gp3（汎用SSD）：標準的な用途向け。スループットとIOPSを個別に設定可能。推奨タイプ。

gp2（旧世代汎用SSD）：現在も使用可能だが、gp3への移行推奨。

io2 / io1（プロビジョンドIOPS SSD）：高IOPSが必要なデータベース用途などに。

st1（スループット最適化HDD）：大容量の連続読み取り向け（ビッグデータ処理など）。

sc1（Cold HDD）：アクセス頻度の低い大容量ストレージに適す（アーカイブ用途など）。

⚫️プロビジョンドIOPS（Provisioned IOPS）
：io1 / io2ボリュームで使用可能な、IOPS（秒あたりのI/O回数）を事前に指定して保証する仕組み。高パフォーマンスが求められる場合に使用。

⚫️EBS最適化（EBS-optimized）インスタンス
：EC2インスタンスとEBS間の専用帯域を確保して、I/Oパフォーマンスを安定させる構成。多くの新世代インスタンスでは標準対応。

⚫️暗号化（EBS Encryption）
：KMS（Key Management Service）と連携し、EBSボリュームとスナップショットを透過的に暗号化できる。暗号化済みスナップショットからは自動で暗号化ボリュームが作成される。

⚫️クロスアカウント / クロスリージョンコピー
：EBSスナップショットを別アカウントや別リージョンにコピー可能。バックアップや災害対策に活用される。

⚫️マルチアタッチ（Multi-Attach）
：io1/io2ボリュームを複数のEC2インスタンスに同時に接続できる機能。クラスタ化されたアプリケーションに利用される（Linuxのみ対応）。

⚫️Auto ScalingとEBS
：Auto Scalingで新しいEC2インスタンスを起動する際、EBSのスナップショットから自動でボリュームを作成・接続できるように設定できる。

⚫️Elastic Volumes（弾力的ボリューム）
：ボリュームのサイズやタイプ、IOPSを動的に変更できる機能。再起動不要でスケールアップが可能。

----------------------------------------------------------------------------
✅ 試験・設計でのポイント
EBSは同じAZ内のEC2にのみ接続可

gp3は汎用用途の最新推奨タイプ（IOPSとスループット個別指定可）

スナップショットはS3に保存されるが、ユーザーには透過的

暗号化はKMS連携で自動化可能

スナップショットからのリストアは別AZにも可（DR対応）

🧠 よく出るひっかけ注意点
誤解しやすい点	正しい知識
EBSはS3と同じようにオブジェクト保存	❌ EBSはブロックストレージ。OSやDBの保存に使用
スナップショットは自動で削除される	❌ 明示的に削除しない限り保持され続ける
EBSはどのインスタンスにもすぐ付け替えできる	❌ 同じAZ内のEC2にのみアタッチ可能

🌍 ユースケース例
Webサーバー用のルートボリューム（gp3）

データベース用に高性能なio2ボリュームを使用

Auto Scaling用にスナップショットから起動テンプレートに組み込み

スナップショットを別リージョンへ定期コピー（災害対策）
----------------------------------------------------------------------------

┌────────────────────┐
│     EC2 Instance（us-east-1a）      │
└────────────────────┘
               ▲
               │ アタッチ
               ▼
┌────────────────────┐
│     EBS Volume（gp3 / io2など）     │
└────────────────────┘
               │
               ▼
        Snapshot（S3上に保存）
               │
               ▼
     別AZや別リージョンに復元可能



/****************** 3-3 Amazon Elastic File System(Amazon EFS) ********************/
Amazon EFS 周辺の主要用語と解説
⚫️Amazon EFS（Elastic File System）
：複数のEC2インスタンスから同時にアクセス可能なフルマネージドのネットワークファイルシステム（NFS互換）。Linuxベースのアプリケーションで共有ファイルストレージとして利用される。

⚫️NFS（Network File System）
：EFSが使用する標準的なファイル共有プロトコル。複数のサーバーがネットワーク経由で1つのファイルシステムにアクセスできる。

⚫️マウントターゲット（Mount Target）
：VPC内の各サブネットにEFSを接続するためのエンドポイント（ENI）。EC2がEFSにアクセスするには、同じVPC内にマウントターゲットが必要。

⚫️パフォーマンスモード（Performance Mode）
：EFSの処理特性を調整するモード。

General Purpose（汎用）：低レイテンシな一般用途向け。ほとんどのワークロードで推奨。

Max I/O：数千台のEC2インスタンスからの並列アクセスが必要な用途向け。ややレイテンシは高くなる。

⚫️スループットモード（Throughput Mode）
：データ転送速度を制御するモード。

Bursting：ストレージ容量に応じて自動でスループットが増減（デフォルト）

Provisioned：指定したスループット（MB/s）を常に確保。高性能用途向け

⚫️EFS ストレージクラス
：EFSには2種類のストレージクラスがある。

Standard：高可用性・低レイテンシ。頻繁にアクセスするデータ向け

Infrequent Access（IA）：あまり使わないファイルを自動で低コスト保存（アクセス時は取り出しコストあり）

⚫️ライフサイクルポリシー（Lifecycle Policy）
：一定期間アクセスされなかったファイルを自動的にIAストレージへ移動する設定。コスト最適化に有効。

⚫️EFS Access Point（アクセスポイント）
：ユーザーやアプリケーションごとに異なるアクセスルート／権限を定義できる機能。コンテナやマルチユーザー環境に便利。

⚫️暗号化（Encryption）
：EFSでは保存時（at rest）と転送時（in transit）の両方で暗号化可能。KMSと連携して鍵管理。

⚫️EFSバックアップ
：AWS Backupによりスケジュール・世代管理されたバックアップを取得可能。復元も容易。

⚫️リージョンとAZにまたがる耐障害性
：EFSはデフォルトで複数AZにまたがって冗長化されており、高可用性を確保できる。


----------------------------------------------------------------------------
✅ 試験・設計でのポイント
複数のEC2から同時にアクセス可能な共有ストレージ

NFSベースでLinuxに適した構成

スループット・パフォーマンス・コストの3軸でモード選択

ライフサイクルポリシーで自動的に低コスト化

EFS Access Pointでアクセス制御と柔軟な構成管理

🧠 よく出るひっかけ注意点
誤解しやすい点	正しい知識
EFSはWindows対応	❌ EFSはLinuxベースのNFSv4で動作。Windows向けはFSx for Windows File Server
EFSはAZごとに独立	❌ デフォルトで複数AZに自動レプリケーションされる
EFSはS3と同じオブジェクトストレージ	❌ EFSはブロックではなくファイルベースのネットワークストレージ（POSIX準拠）

🌍 ユースケース例
Webサーバーの共有ストレージ（WordPressなど）

機械学習モデルの共有（複数ノードで同時読み書き）

Docker/ECSなどでの永続ボリューム共有

社内共有フォルダのクラウド移行



----------------------------------------------------------------------------

         ┌──────────────────────────────┐
         │         Amazon EFS（共有ファイルシステム）       │
         └──────────────────────────────┘
                    ▲        ▲
       マウントターゲット（各AZに設置）
                    │        │
       ┌────────┐  ┌────────┐
       │ EC2（AZ-A） │  │ EC2（AZ-B） │ ← 同じVPC内で同時アクセス
       └────────┘  └────────┘




/****************** 3-4 Amazon FSx ********************/
Amazon FSx 周辺の主要用語と解説
⚫️Amazon FSx
：AWSが提供するフルマネージドのファイルシステムサービスの総称。ニーズに応じて、Windows、Lustre、NetApp ONTAP など複数の種類がある。

🪟 ① FSx for Windows File Server
⚫️FSx for Windows File Server
：Windows向けの共有ファイルストレージ（SMBプロトコル対応）。Active Directory連携、Windows ACL（アクセス制御リスト）に対応。

⚫️SMB（Server Message Block）
：Windowsで一般的に使用されるファイル共有プロトコル。FSx for Windows は SMBベースで、Windowsクライアントからアクセスできる。

⚫️マルチAZ配置
：ファイルシステムを複数のAZにまたがって冗長構成でき、障害時にも自動フェイルオーバー可能。

⚫️Active Directory 連携
：Windowsユーザー／グループの権限をActive Directoryと統合管理できる。マネージドADまたはオンプレミスADと連携可能。

🧬 ② FSx for Lustre
⚫️FSx for Lustre
：HPC（ハイパフォーマンスコンピューティング）向けのファイルシステム。超高速I/Oを必要とするビッグデータ解析・機械学習に最適。

⚫️Lustre
：大規模並列処理に対応したオープンソースの分散ファイルシステム。大量のデータを同時に処理する能力が高い。

⚫️S3リンク（S3バックエンド連携）
：FSx for Lustre は S3バケットと自動同期できる。Lustreに保存したデータをS3に書き戻すことも可能。

⚫️スループットとIOPSのチューニング
：容量ベースまたはプロビジョンドのスループットモードが選べる。I/O要件に応じて最適化可能。

🧊 ③ FSx for NetApp ONTAP
⚫️FSx for NetApp ONTAP
：NetAppのONTAPストレージOSをベースとしたエンタープライズ向けマルチプロトコル対応ストレージ。NFS, SMB, iSCSI に対応。

⚫️ONTAP
：NetAppの商用ストレージOS。スナップショット、クローン、レプリケーションなどの高度な機能をサポート。

⚫️FlexVol / FlexClone
：スナップショットからのクローンを即時作成・変更できるNetApp独自の機能。効率的なテスト・開発に活用される。

⚫️マルチプロトコルアクセス
：NFS・SMBを同時サポートしており、WindowsとLinuxクライアントが同じデータを共有可能。

🐧 ④ FSx for OpenZFS
⚫️FSx for OpenZFS
：ZFSファイルシステムベースのLinux向けファイルストレージ。スナップショット、データ整合性チェック、圧縮などを活用可能。

⚫️ZFS
：高信頼性・自己修復・スナップショット対応の先進的なファイルシステム。FSx for OpenZFSはこの機能をマネージドで提供。



----------------------------------------------------------------------------
✅ 試験・設計でのポイント
ニーズ	選択する FSx
Windows共有フォルダが欲しい	FSx for Windows File Server
機械学習・HPC用途で高速I/Oが必要	FSx for Lustre
Linux/Windows混在、エンタープライズ機能が必要	FSx for NetApp ONTAP
スナップショットや自己修復が必要なUNIX系	FSx for OpenZFS
各サービスともに VPC内からマウントして使用

バックアップ、暗号化、スナップショットに標準対応

パフォーマンス要件とプロトコルサポートに注目！

🧠 よく出るひっかけ注意点
誤解しやすい点	正しい知識
FSxはすべてLinux専用	❌ Windows向けやマルチプロトコル対応もあり（SMB/NFS）
FSxはEBSと同じ	❌ FSxはファイルストレージ（共有可）、EBSはブロックストレージ（EC2専用）
FSx for Lustre は S3 を使えない	❌ S3バケットと双方向で連携可能（インポート／エクスポート）


🌍 ユースケース例
FSx for Windows：社内ファイルサーバー、AD連携ファイル共有

FSx for Lustre：Amazon SageMakerとの連携でML学習の高速化

FSx for ONTAP：WindowsとLinux混在環境でのストレージ統一管理

FSx for OpenZFS：金融・医療系でのスナップショット活用＋整合性チェック

----------------------------------------------------------------------------

┌──────────────┐
│ Amazon FSx サービス群      │
└──────────────┘
     ▲      ▲      ▲      ▲
     │      │      │      │
[Windows] [Lustre] [ONTAP] [OpenZFS]
     │         │         │         │
 EC2 / VPC   HPC / ML   Mixed OS   Linux Apps
     │         │         │         │
 SMB / NFS   NFS / S3   SMB/NFS    ZFS



/****************** 3-5 Amazon S3 ********************/
Amazon S3 周辺の主要用語と解説
⚫️Amazon S3（Simple Storage Service）
：スケーラブルで高耐久なオブジェクトストレージサービス。画像・動画・ログ・バックアップなどあらゆるデータを保存できる。耐久性は「99.999999999%（11ナイン）」。容量無制限、サーバーレス。

🔖 基本用語
⚫️バケット（Bucket）
：S3におけるデータの論理的な保管場所。フォルダのような役割を持ち、グローバルで一意の名前が必要。

⚫️オブジェクト（Object）
：S3に保存されるファイル本体＋メタデータのこと。バケット内に格納される。

⚫️キー（Key）
：オブジェクトのファイルパスのような識別子。S3は階層構造ではなく「キー名」で擬似的な階層を実現している。

⚫️プレフィックス（Prefix）
：キーの先頭部分。検索・ライフサイクル管理・パーティション設計の最適化に使われる。

⚫️S3 URL（URI）
：S3オブジェクトにアクセスするための形式。例：https://bucket-name.s3.amazonaws.com/object-key

🛡️ セキュリティとアクセス制御
⚫️バケットポリシー
：バケット全体に対して適用するアクセス制御ルール（JSON形式）。匿名アクセス禁止や特定アカウントの許可などを設定。

⚫️ACL（Access Control List）
：個別オブジェクトごとのアクセス制御。推奨されない古い仕組みだが一部用途で残っている。

⚫️IAMポリシー
：ユーザー・ロールに対して付与する権限設定。S3バケットに対する許可／拒否をIAMで管理。

⚫️ブロックパブリックアクセス
：S3の設定でバケットやアカウント全体の公開を防止する仕組み。セキュリティ強化の推奨設定。

⚫️S3暗号化（SSE）
：保存中のデータを暗号化。以下の3種類がある：

SSE-S3：S3管理キーで自動暗号化（デフォルト）

SSE-KMS：KMS（Key Management Service）でカスタムキーを使用

SSE-C：顧客が提供したカスタムキーを使用（取り扱い注意）


----------------------------------------------------------------------------
🧊 ストレージクラス（保存のコスト・アクセス頻度に応じて選択）
クラス名	特徴
S3 Standard	頻繁にアクセスされるデータ向け（高可用・高耐久）
S3 Intelligent-Tiering	アクセスパターンに応じて自動的に最適な階層に移動
S3 Standard-IA	あまりアクセスされないが、即時取り出し可能なデータ向け
S3 One Zone-IA	1つのAZにしか保存しない分、安価。可用性は劣る
S3 Glacier	低コストなアーカイブ向け。復元に数分〜数時間必要
S3 Glacier Deep Archive	最も安価な長期保管向け。復元に最大12時間程度
🔁 データ管理と自動化
⚫️ライフサイクルポリシー
：一定期間後にストレージクラス変更／削除を自動化する設定。コスト最適化に重要。

⚫️バージョニング（Versioning）
：同じオブジェクト名で複数のバージョンを保存できる仕組み。誤削除対策や監査にも有効。

⚫️レプリケーション（CRR/SRR）
：バケット間で自動的にデータを複製する機能。

CRR（クロスリージョン）：別リージョンへの災害対策

SRR（同一リージョン）：監査や分析用のデータ分離に活用

⚫️S3 Event Notification
：オブジェクトのアップロード／削除時にSNS、SQS、Lambdaなどに通知を飛ばす機能。イベント駆動アーキテクチャに活用。

📈 分析・連携
⚫️S3 Access Logs / Server Access Logging
：バケットへのアクセス履歴を別バケットに出力できる。セキュリティ監査や使用状況分析に利用。

⚫️S3 Inventory
：バケット内のオブジェクト一覧をCSVやORC形式で出力。集計・分析に便利。

⚫️S3 Select
：S3上のCSV/JSONファイルに対してSQLクエリで部分抽出できる機能。転送量とコストを削減。

⚫️S3 Object Lambda
：S3オブジェクトの取り出し時にLambda関数で動的にデータを加工して返す。マスク処理やカスタムビューに使える。

✅ 試験・設計でのポイント
保存対象がファイル（オブジェクト）であり、ブロックではない（EBSとの違い）

耐久性＝99.999999999%（11ナイン）

ストレージクラスとライフサイクルポリシーの組み合わせでコスト最適化

暗号化・バージョン管理・レプリケーションを活用した堅牢設計

サーバーレスアーキテクチャと高い親和性（Lambda、Athena、CloudFrontなど）

🧠 よく出るひっかけ注意点
誤解しやすい点	正しい知識
S3はファイルシステムのようにマウントできる	❌ S3はオブジェクトストレージ。EC2からは HTTPベースでアクセス（※マウントにはS3FSなどが必要）
S3はすべて暗号化される	❌ 明示的に暗号化設定が必要（SSE-S3はデフォルト有効化可）
バージョニングは上書き保存されるだけ	❌ 古いバージョンも残り続ける。削除しても完全に消えない

🌍 ユースケース例
静的Webサイトホスティング（CloudFrontと連携）

画像・動画・ログファイル保存

データレイクの元データ保管場所（Athena/Redshiftと連携）

アーカイブ・法定保存・バックアップ（Glacier/Deep Archive）


----------------------------------------------------------------------------

┌──────────────┐
│      S3 バケット（my-bucket）     │
└────┬──────┬──────┘
     │         │         │
[オブジェクトA]  [オブジェクトB]  [オブジェクトC]
     │         │         │
     ▼         ▼         ▼
  SSE暗号化   バージョン管理   イベント通知




/****************** 3-5-1 Amazon S3 Glacier ********************/
Amazon S3 Glacier 周辺の主要用語と解説
⚫️Amazon S3 Glacier
：長期保管向けの低コストなアーカイブ用ストレージサービス。アクセス頻度が非常に低いデータ（法定保存、バックアップなど）を安全に保存可能。

⚫️アーカイブ（Archive）
：S3 Glacierに格納される1つのファイル単位のデータオブジェクト。S3のオブジェクトに相当する。

⚫️ボールト（Vault）
：Glacierでアーカイブを保管するためのコンテナ（箱）のようなもの。バケットに対するVaultというイメージ。

⚫️Glacier ストレージクラス
：S3バケット内で使えるストレージ階層。3種類ある：

S3 Glacier：アーカイブ用途。数分〜数時間で取り出し

S3 Glacier Flexible Retrieval（旧Glacier）：低コスト＋3段階の復元速度選択

S3 Glacier Deep Archive：最安だが復元に最大12時間必要。数年間保存が前提のデータ向け

⚫️ライフサイクルポリシー
：S3 StandardやIAに保存されているデータを、一定期間後にGlacierやDeep Archiveへ自動移行するルール。コスト最適化に活用。

⚫️復元（Restore）
：Glacierに格納されたオブジェクトはすぐに使えないため、事前に復元リクエストを行ってアクセスできるようにする必要がある。復元には時間がかかる。

⚫️復元速度（Retrieval Tier）
：Glacierでは復元の速さを選べる（※Glacier Flexible Retrievalの場合）。

Tier名	特徴
Expedited	数分以内（小さいファイル向け）
Standard	数時間（3〜5時間）
Bulk	数十時間（5〜12時間）。最安
⚫️復元期限（Restore Expiration）
：復元したデータは一時的にS3上に展開される。復元時に指定した期限（1〜30日）後に自動で消える。

⚫️アーカイブID
：Glacierに格納したアーカイブの一意な識別子。復元・削除の際に必要。

⚫️Vault Lock
：コンプライアンス目的で使用する機能。Vault内のデータに対して書き換え禁止などのルールを適用し、強制的に保持することができる。

⚫️データ耐久性
：S3と同じく 99.999999999%（11ナイン）の耐久性 を持つ。安心して長期間保管可能。


----------------------------------------------------------------------------
✅ 試験・設計でのポイント
**「取り出しに時間がかかるが超低コスト」**という性質を理解

Glacier/Deep ArchiveはS3のストレージクラスの一種として利用

ライフサイクルポリシーで自動移行＋自動削除を設計する

復元は事前に「取り出しリクエスト」 → 一時的に使える状態になる

Vault Lockは金融・医療系などデータ改ざん防止が必須の業界で重要

🧠 よく出るひっかけ注意点
誤解しやすい点	正しい知識
Glacierはすぐに読み出せる	❌ 事前に復元リクエストが必要（即時アクセス不可）
GlacierとS3は別サービス	❌ GlacierはS3のストレージクラスの1つ（※旧Glacierサービスもある）
復元したらずっと使える	❌ 復元には期限（1〜30日）を指定し、それが過ぎると削除される

🌍 ユースケース例
法令で5年間保存が義務づけられている金融書類

ログファイルや監査ログの長期保存

過去映像・音声データのアーカイブ

データレイクで使い終えた分析ファイルの保管

----------------------------------------------------------------------------
[S3バケット]
   ├── object-001 (Standard)
   ├── object-002 (IA)
   └── object-003 (Glacier)
             ▲
      ライフサイクルで移行（90日後など）

object-003 を使いたい！  
   ↓  
リストアリクエスト（Standard / Bulk）  
   ↓  
復元データが一時的に使用可能（例：3日間）





/****************** 3-6 Amazon Backup ********************/
AWS Backup 周辺の主要用語と解説
⚫️AWS Backup
：複数のAWSサービスのバックアップを一元管理できるマネージドサービス。バックアップの作成、スケジュール、保存先管理、復元などを一括で行える。

🧱 基本構成と用語
⚫️バックアッププラン（Backup Plan）
：いつ・どのくらいの頻度でバックアップするかなどのルールのセット。複数のリソースに適用可能。

⚫️バックアップルール（Backup Rule）
：バックアッププランの中にある個別のスケジュールや保存期間、保存先などの設定。例：毎日1回、7日間保持など。

⚫️バックアップボールト（Backup Vault）
：バックアップデータの保存場所。暗号化やアクセス制御（IAM）を設定できる。

⚫️バックアップ対象リソース（Protected Resource）
：バックアップの対象となるAWSサービスのリソース。
例：EBSボリューム、RDSインスタンス、DynamoDBテーブル、EFSファイルシステムなど。

⚫️バックアップジョブ（Backup Job）
：バックアップ処理の単位。スケジュールまたはオンデマンドで作成される。

⚫️リストアジョブ（Restore Job）
：バックアップからの復元処理の単位。成功・失敗などのステータス確認が可能。

⚫️オンデマンドバックアップ
：その場で即時に実行するバックアップ。スケジュールに依存せず、手動で作成できる。

⚫️バックアップコピー（Backup Copy）
：別のリージョンやボールトへバックアップデータを複製。災害対策（DR）として活用される。

🔐 セキュリティと管理
⚫️IAMによるアクセス制御
：Backup Vault や Backup Plan に対してきめ細かい権限設定が可能。

⚫️KMS連携（暗号化）
：バックアップデータは KMSキーを使用して暗号化可能。Vaultごとに異なるキーの設定も可能。

⚫️タグ（Tags）
：リソースにメタ情報を追加できる。バックアップの対象や自動割当にも使える。

----------------------------------------------------------------------------

✅ 対応サービス（代表例）
サービス名	説明
Amazon EC2（EBS）	EBSスナップショットをバックアップ
Amazon RDS	データベースのスナップショット
Amazon DynamoDB	フルバックアップおよびポイントインタイムリカバリ
Amazon EFS	ファイルシステムのスナップショット
Amazon FSx	WindowsやLustreファイルシステムのバックアップ
AWS Storage Gateway	仮想テープライブラリのバックアップ
✅ 試験・設計でのポイント
複数サービスの統合バックアップ管理ができるのがAWS Backup

Backup Vault は保管場所＆アクセス制御の中心

バックアップデータはKMSで暗号化可能

クロスリージョンコピーでDR構成が可能

**ポイントインタイムリカバリ（PITR）**は一部サービス（例：DynamoDB）で有効

🧠 よく出るひっかけ注意点
誤解しやすい点	正しい知識
S3のバックアップも対象	❌ S3はAWS Backupでは対象外（バージョニングやS3レプリケーションで対応）
AWS Backupはすべてのリージョンに対応	❌ サポートされているリージョンのみ（※東京リージョンは対応済）
バックアップすれば復元もすぐ可能	❌ リストア先の設定（リソース名、パス、構成）に注意が必要


🌍 ユースケース例
EC2のEBSボリュームを毎晩自動バックアップ＆30日保持

DynamoDBテーブルをPITR対応＋週次フルバックアップ

重要データのVaultを東京リージョン→大阪リージョンへ自動コピー（DR対策）



----------------------------------------------------------------------------

[バックアッププラン]
      └─ バックアップルール（毎日1回、保持30日）

[保護されたリソース]
  ├─ EBSボリューム
  ├─ RDSインスタンス
  └─ EFSファイルシステム

      ▼ バックアップジョブ実行

[バックアップボールト]
  ├─ 保存データ
  ├─ KMS暗号化
  └─ クロスリージョンコピー可能

      ▼
[必要に応じてリストアジョブ]






/****************** 3-7-1 AWS Storage Gateway ********************/
AWS Storage Gateway 周辺の主要用語と解説
⚫️AWS Storage Gateway
：オンプレミスのアプリケーションとAWSクラウドストレージ（S3・Glacierなど）を接続するハイブリッドストレージサービス。ローカルにキャッシュを持ちつつ、クラウドにデータを保存・バックアップできる。

🧩 ゲートウェイの3つのタイプ
① ファイルゲートウェイ（File Gateway）
⚫️ファイルゲートウェイ
：オンプレ側にNFS / SMB 共有を提供し、バックエンドは S3 にオブジェクトとして保存される。ファイルサーバーのクラウド化に最適。

ファイルを保存すると → 自動で S3 オブジェクトに変換されて保存

S3バケットと連携し、バージョニングやライフサイクルも活用可能

ローカルキャッシュあり（高速な読み書きを実現）

② ボリュームゲートウェイ（Volume Gateway）
⚫️ボリュームゲートウェイ
：ブロックストレージ（iSCSI）を提供し、バックアップはS3＋EBSスナップショット形式で保存。

2つのモードがある：

モード	説明
キャッシュモード	データは主にS3上、オンプレには頻繁なデータのみキャッシュ
保存モード	データはオンプレに完全保存、S3はバックアップ用
③ テープゲートウェイ（Tape Gateway）
⚫️テープゲートウェイ
：既存のバックアップソフトウェアが仮想テープライブラリ（VTL）として使用可能。クラウド上では S3 Glacier / Deep Archive に保存される。

オンプレでLTOテープを使っていた企業がそのままクラウド化できる

バックアップアプリ（例：Veeam、Veritas、NetBackup など）と連携可能

🔐 セキュリティと管理
⚫️ローカルゲートウェイアプライアンス
：オンプレに設置するVM（VMware/Hyper-V）または専用ハードウェア（AWS提供）。クラウドとオンプレの仲介役。

⚫️暗号化
：すべてのデータは保存時（at rest）および送信時（in transit）に暗号化。KMSと統合可能。

⚫️認証・アクセス制御
：SMB接続時にはActive Directory連携によるユーザー認証も可能。

⚫️監視・ログ管理
：CloudWatch、CloudTrail、AWS Backup と連携してジョブの監視やバックアップの自動化が可能。


----------------------------------------------------------------------------

✅ 試験・設計でのポイント
要件	選択するゲートウェイ
ファイルをS3に保存したい	✅ ファイルゲートウェイ
アプリにiSCSIディスクを提供したい	✅ ボリュームゲートウェイ
テープバックアップをクラウド化したい	✅ テープゲートウェイ
Storage Gatewayはオンプレとクラウドをつなぐ“橋”の役割

バックアップ戦略やファイル共有をクラウドベースに移行する時に活用

ローカルキャッシュで高速性とクラウド保存による安全性を両立

🧠 よく出るひっかけ注意点
誤解しやすい点	正しい知識
Storage Gateway はクラウド内だけで動く	❌ オンプレに設置して初めて意味があるサービス
ファイルゲートウェイはブロックストレージ扱い	❌ オブジェクトストレージ（S3）として保存される
テープゲートウェイの保存先はEBS	❌ S3 Glacier / Deep Archive が保存先

🌍 ユースケース例
本社サーバーを廃止し、ファイル共有をS3ベースで継続

既存のバックアップソフトから仮想テープとしてクラウド保存

支店や工場でのデータをボリュームとしてキャッシュ＋S3へバックアップ


----------------------------------------------------------------------------
[オンプレ環境]
  └─ Storage Gateway（VM or ハードウェア）
         ├─ NFS / SMB（ファイル共有） → File Gateway
         ├─ iSCSI（ディスク）         → Volume Gateway
         └─ 仮想テープ（VTL）         → Tape Gateway
                        │
                        ▼
                 [AWS クラウド]
         ├─ S3（オブジェクト）
         ├─ S3 Glacier（アーカイブ）
         └─ EBS スナップショット（Volume Backup）





/****************** 3-7-1 Amazon EC2 ********************/
/****************** 3-7-1 Amazon EC2 ********************/
/****************** 3-7-1 Amazon EC2 ********************/
/****************** 3-7-1 Amazon EC2 ********************/
/****************** 3-7-1 Amazon EC2 ********************/
/****************** 3-7-1 Amazon EC2 ********************/





----------------------------------------------------------------------------
----------------------------------------------------------------------------
















